[project]
name = "tasks"
version = "0.1.0"

[[tool.mypy.overrides]]
module = "confluent_kafka.*"
ignore_missing_imports = true

[tool.ruff]
unfixable = ["F841"]
select = [
    ## Here are all available rules
    # https://beta.ruff.rs/docs/rules/
    # Please, comment or uncomment lines but do not remove them

    "F",          # Pyflakes                          https://beta.ruff.rs/docs/rules/#pyflakes-f
    "E",          # pycodestyle - Error               https://beta.ruff.rs/docs/rules/#error-e
    "W",          # pycodestyle - Warning             https://beta.ruff.rs/docs/rules/#warning-w
    "C90",        # mccabe                            https://beta.ruff.rs/docs/rules/#mccabe-c90
    "I",          # isort                             https://beta.ruff.rs/docs/rules/#isort-i
    # "N",          # pep8-naming                   x   https://beta.ruff.rs/docs/rules/#pep8-naming-n
    # "D",          # pydocstyle                    x   https://beta.ruff.rs/docs/rules/#pydocstyle-d
    # "UP",         # pyupgrade                     x   https://beta.ruff.rs/docs/rules/#pyupgrade-up
    "YTT",        # flake8-2020                       https://beta.ruff.rs/docs/rules/#flake8-2020-ytt
    # "ANN",        # flake8-annotations                https://beta.ruff.rs/docs/rules/#flake8-annotations-ann
    "S",          # flake8-bandit                     https://beta.ruff.rs/docs/rules/#flake8-bandit-s
    # "BLE",        # flake8-blind-except               https://beta.ruff.rs/docs/rules/#flake8-blind-except-ble
    # "FBT",        # flake8-boolean-trap               https://beta.ruff.rs/docs/rules/#flake8-boolean-trap-fbt
    "B",          # flake8-bugbear                    https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
    # "A",          # flake8-builtins              x    https://beta.ruff.rs/docs/rules/#flake8-builtins-a
    "COM",        # flake8-commas                     https://beta.ruff.rs/docs/rules/#flake8-commas-com
    "C4",         # flake8-comprehensions             https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
    # "DTZ",        # flake8-datetimez                  https://beta.ruff.rs/docs/rules/#flake8-datetimez-dtz
    # "T10",        # flake8-debugger                   https://beta.ruff.rs/docs/rules/#flake8-debugger-t10
    # "DJ",         # flake8-django                     https://beta.ruff.rs/docs/rules/#flake8-django-dj
    # "EM",         # flake8-errmsg                     https://beta.ruff.rs/docs/rules/#flake8-errmsg-em
    # "EXE",        # flake8-executable                 https://beta.ruff.rs/docs/rules/#flake8-executable-exe
    "ISC",        # flake8-implicit-str-concat        https://beta.ruff.rs/docs/rules/#flake8-implicit-str-concat-isc
    "ICN",        # flake8-import-conventions         https://beta.ruff.rs/docs/rules/#flake8-import-conventions-icn
    # "G",          # flake8-logging-format             https://beta.ruff.rs/docs/rules/#flake8-logging-format-g
    "INP",        # flake8-no-pep420                  https://beta.ruff.rs/docs/rules/#flake8-no-pep420-inp
    "PIE",        # flake8-pie                        https://beta.ruff.rs/docs/rules/#flake8-pie-pie
    "T20",        # flake8-print                      https://beta.ruff.rs/docs/rules/#flake8-print-t20
    "PYI",        # flake8-pyi                        https://beta.ruff.rs/docs/rules/#flake8-pyi-pyi
    "PT",         # flake8-pytest-style               https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
    "Q",          # flake8-quotes                     https://beta.ruff.rs/docs/rules/#flake8-quotes-q
    "RSE",        # flake8-raise                      https://beta.ruff.rs/docs/rules/#flake8-raise-rse
    "RET",        # flake8-return                     https://beta.ruff.rs/docs/rules/#flake8-return-ret
    # "SLF",        # flake8-self                       https://beta.ruff.rs/docs/rules/#flake8-self-slf
    # "SIM",        # flake8-simplify              x    https://beta.ruff.rs/docs/rules/#flake8-simplify-sim
    "TID",        # flake8-tidy-imports               https://beta.ruff.rs/docs/rules/#flake8-tidy-imports-tid
    # "TCH",        # flake8-type-checking              https://beta.ruff.rs/docs/rules/#flake8-type-checking-tch
    "ARG",        # flake8-unused-arguments           https://beta.ruff.rs/docs/rules/#flake8-unused-arguments-arg
    # "PTH",        # flake8-use-pathlib           x    https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
    # "ERA",        # eradicate                         https://beta.ruff.rs/docs/rules/#eradicate-era
    # "PD",         # pandas-vet                        https://beta.ruff.rs/docs/rules/#pandas-vet-pd
    "PGH",        # pygrep-hooks                      https://beta.ruff.rs/docs/rules/#pygrep-hooks-pgh
    # "PL",         # Pylint                       x    https://beta.ruff.rs/docs/rules/#pylint-pl
    "PLC",        # Pylint - Convention               https://beta.ruff.rs/docs/rules/#convention-plc
    "PLE",        # Pylint - Error                    https://beta.ruff.rs/docs/rules/#error-ple
    # "PLR",        # Pylint - Refactor            x    https://beta.ruff.rs/docs/rules/#refactor-plr
    "PLW",        # Pylint - Warning                  https://beta.ruff.rs/docs/rules/#warning-plw
    # "TRY",        # tryceratops                  x    https://beta.ruff.rs/docs/rules/#tryceratops-try
    "NPY",        # NumPy-specific rules              https://beta.ruff.rs/docs/rules/#numpy-specific-rules-npy
    "RUF",        # Ruff-specific rules               https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
    "TD002",     # flake8-missing-todo-author               https://beta.ruff.rs/docs/rules/#flake8-todos-td
    "TD004",      # flake8-missing-todo-colon                https://beta.ruff.rs/docs/rules/#flake8-todos-td
    "TD005",      # flake8-missing-todo-description              https://beta.ruff.rs/docs/rules/#flake8-todos-td
    "TD007",      # flake8-missing-space-after-todo-colon        https://beta.ruff.rs/docs/rules/#flake8-todos-td
]
exclude = [
    ".venv",
    "poetry.lock",
    "__pycache__",
    "sdk/go_",
    "web",
    "pyproject.toml",
    "sdk/py_protocol/protocol/*/v*",
]
ignore = ["E999", "UP015", "S311"]
line-length = 120
target-version = "py311"
ignore-init-module-imports = true
task-tags = ["TODO"]
